{"version":3,"file":"static/js/76.f4b2d0e1.chunk.js","mappings":"iOACA,EAA+B,2B,SC4C/B,EAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,EAAID,KACb,CAACC,KAGF,0BACE,eAAII,UAAWC,EAAf,SACGP,EAAKQ,OAAS,GACb,oDAEAR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,UAAWR,EAAd,EAAcA,GAAIS,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACP,0BACoB,OAAjBA,GACC,gBACEN,UAAWC,EACXM,IAAKC,EACLC,IAAG,aAAQJ,EAAR,YAGL,gBACEL,UAAWC,EACXM,IAAG,yCAAoCD,GACvCG,IAAG,UAAKJ,MAGZ,kCAAUA,MACV,uCAAeD,OAfRR,Y,mJCrBrB,IAAMc,EAAU,mCACVC,EAAW,gCAEXC,EAAe,SAACC,GACpBC,MAAM,GAAD,OACAH,EADA,uCACuCD,EADvC,2BAGFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACM,GAAD,OAAaR,EAAWQ,EAAQC,YACrCC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBG,EAAa,SAACC,EAASC,GAC3Bf,MAAM,GAAD,OAAIH,EAAJ,iBAAqBiB,EAArB,oBAAwClB,EAAxC,oBACFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWD,EAASC,MACzBP,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBzB,EAAY,SAAC6B,EAASjC,GAC1BmB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBiB,EAArB,4BAAgDlB,EAAhD,oBACFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWnC,EAAQmC,EAAMpC,SAC9B6B,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBO,EAAe,SAACH,EAASI,GAC7BlB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBiB,EAArB,4BAAgDlB,EAAhD,oBACFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWE,EAAWF,EAAMR,YACjCC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBS,EAAe,SAACC,EAAOC,GAC3BrB,MAAM,GAAD,OACAH,EADA,8BAC8BuB,EAD9B,oBAC+CxB,EAD/C,2BAGFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWK,EAAiBL,EAAMR,YACvCC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,Q","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","utils/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonStyles\":\"Cast_buttonStyles__NZQ2X\"};","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"../../utils/api\";\nimport image from \"./../../image.jpeg\";\nimport styles from \"./Cast.module.css\";\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchCast(id, setCast);\n  }, [id]);\n\n  return (\n    <div>\n      <ul className={styles.buttonStyles}>\n        {cast.length < 1 ? (\n          <p>Sorry, no cast available</p>\n        ) : (\n          cast.map(({ character, id, name, profile_path }) => (\n            <li key={id}>\n              {profile_path === null ? (\n                <img\n                  className={styles.buttonStyles}\n                  src={image}\n                  alt={`No ${name} here`}\n                />\n              ) : (\n                <img\n                  className={styles.buttonStyles}\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={`${name}`}\n                />\n              )}\n              <p>Name: {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","const API_KEY = \"8cf48041f02f710cc4524470fa3eabaf\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nconst fetchPopular = (setPopular) => {\n  fetch(\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((popular) => setPopular(popular.results))\n    .catch((e) => console.log(e));\n};\n\nconst fetchMovie = (movieId, setMovie) => {\n  fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setMovie(movie))\n    .catch((e) => console.log(e));\n};\n\nconst fetchCast = (movieId, setCast) => {\n  fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setCast(movie.cast))\n    .catch((e) => console.log(e));\n};\n\nconst fetchReviews = (movieId, setReviews) => {\n  fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setReviews(movie.results))\n    .catch((e) => console.log(e));\n};\n\nconst fetchByQuery = (query, setSearchedMovie) => {\n  fetch(\n    `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setSearchedMovie(movie.results))\n    .catch((e) => console.log(e));\n};\n\nexport { fetchPopular, fetchMovie, fetchCast, fetchReviews, fetchByQuery };\n"],"names":["useState","cast","setCast","id","useParams","useEffect","fetchCast","className","styles","length","map","character","name","profile_path","src","image","alt","API_KEY","BASE_URL","fetchPopular","setPopular","fetch","then","response","ok","Error","status","json","popular","results","catch","e","console","log","fetchMovie","movieId","setMovie","movie","fetchReviews","setReviews","fetchByQuery","query","setSearchedMovie"],"sourceRoot":""}