{"version":3,"file":"static/js/906.fb218d90.chunk.js","mappings":"0NACA,EAAyB,2B,SC8CzB,EA1CmB,WACjB,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQF,EAAYG,IAAI,SAsB9B,OARAC,EAAAA,EAAAA,YAAU,WACM,OAAVF,GAIJG,EAAAA,EAAAA,IAAaH,EAAOJ,GAHlBA,EAAkB,MAInB,CAACI,KAGF,4BACE,kBAAMI,SAtBW,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACbC,EAAYF,EAAKG,SAASV,MAAMW,MACpB,KAAdF,IAGJV,EAAe,CAAEC,MAAOS,KACxBN,EAAAA,EAAAA,IAAaH,EAAOJ,GACpBW,EAAKK,UAaH,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,+BAEF,wBACGlB,EAAeoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAArB,SAA4BC,KADKD,a,mJCtC7C,IAAMK,EAAU,mCACVC,EAAW,gCAEXC,EAAe,SAACC,GACpBC,MAAM,GAAD,OACAH,EADA,uCACuCD,EADvC,2BAGFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACM,GAAD,OAAaR,EAAWQ,EAAQC,YACrCC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBG,EAAa,SAACC,EAASC,GAC3Bf,MAAM,GAAD,OAAIH,EAAJ,iBAAqBiB,EAArB,oBAAwClB,EAAxC,oBACFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWD,EAASC,MACzBP,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBO,EAAY,SAACH,EAASI,GAC1BlB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBiB,EAArB,4BAAgDlB,EAAhD,oBACFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWE,EAAQF,EAAMG,SAC9BV,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBU,EAAe,SAACN,EAASO,GAC7BrB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBiB,EAArB,4BAAgDlB,EAAhD,oBACFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWK,EAAWL,EAAMR,YACjCC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAGxBhC,EAAe,SAACH,EAAO+C,GAC3BtB,MAAM,GAAD,OACAH,EADA,8BAC8BtB,EAD9B,oBAC+CqB,EAD/C,2BAGFK,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,UAEjBL,MAAK,SAACe,GAAD,OAAWM,EAAiBN,EAAMR,YACvCC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF","sources":["webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","utils/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listed\":\"MoviesPage_listed__AGQMu\"};","import React, { useEffect, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { fetchByQuery } from \"../../utils/api\";\nimport styles from \"./MoviesPage.module.css\";\n\nconst MoviesPage = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get(\"query\");\n\n  const searchMovies = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formQuery = form.elements.query.value;\n    if (formQuery === \"\") {\n      return;\n    }\n    setSearchQuery({ query: formQuery });\n    fetchByQuery(query, setSearchedMovies);\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query === null) {\n      setSearchedMovies([]);\n      return;\n    }\n    fetchByQuery(query, setSearchedMovies);\n  }, [query]);\n\n  return (\n    <div>\n      <form onSubmit={searchMovies}>\n        <input type=\"text\" name=\"query\"></input>\n        <button type=\"submit\">Search movies</button>\n      </form>\n      <ul>\n        {searchedMovies.map(({ id, title }) => (\n          <li className={styles.listed} key={id}>\n            <Link to={`/movies/${id}`}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","const API_KEY = \"8cf48041f02f710cc4524470fa3eabaf\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nconst fetchPopular = (setPopular) => {\n  fetch(\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((popular) => setPopular(popular.results))\n    .catch((e) => console.log(e));\n};\n\nconst fetchMovie = (movieId, setMovie) => {\n  fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setMovie(movie))\n    .catch((e) => console.log(e));\n};\n\nconst fetchCast = (movieId, setCast) => {\n  fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setCast(movie.cast))\n    .catch((e) => console.log(e));\n};\n\nconst fetchReviews = (movieId, setReviews) => {\n  fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setReviews(movie.results))\n    .catch((e) => console.log(e));\n};\n\nconst fetchByQuery = (query, setSearchedMovie) => {\n  fetch(\n    `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1`\n  )\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then((movie) => setSearchedMovie(movie.results))\n    .catch((e) => console.log(e));\n};\n\nexport { fetchPopular, fetchMovie, fetchCast, fetchReviews, fetchByQuery };\n"],"names":["useState","searchedMovies","setSearchedMovies","useSearchParams","searchQuery","setSearchQuery","query","get","useEffect","fetchByQuery","onSubmit","event","preventDefault","form","currentTarget","formQuery","elements","value","reset","type","name","map","id","title","className","styles","to","API_KEY","BASE_URL","fetchPopular","setPopular","fetch","then","response","ok","Error","status","json","popular","results","catch","e","console","log","fetchMovie","movieId","setMovie","movie","fetchCast","setCast","cast","fetchReviews","setReviews","setSearchedMovie"],"sourceRoot":""}